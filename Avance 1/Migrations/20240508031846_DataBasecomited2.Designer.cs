// <auto-generated />
using System;
using Avance_1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Avance_1.Migrations
{
    [DbContext(typeof(Avance_1Context))]
    [Migration("20240508031846_DataBasecomited2")]
    partial class DataBasecomited2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Avance_1.Models.Agente", b =>
                {
                    b.Property<string>("IdAgente")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DesignioIdPersona")
                        .IsRequired()
                        .HasColumnType("character varying(5)");

                    b.Property<string>("IdPersona")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("idRole")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("rolIdRol")
                        .IsRequired()
                        .HasColumnType("character varying(5)");

                    b.HasKey("IdAgente");

                    b.HasIndex("DesignioIdPersona");

                    b.HasIndex("rolIdRol");

                    b.ToTable("Agente");
                });

            modelBuilder.Entity("Avance_1.Models.CamECU911", b =>
                {
                    b.Property<string>("IdCam")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("IdZona")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Zona_designadaIdZona")
                        .IsRequired()
                        .HasColumnType("character varying(5)");

                    b.HasKey("IdCam");

                    b.HasIndex("Zona_designadaIdZona");

                    b.ToTable("CamECU911");
                });

            modelBuilder.Entity("Avance_1.Models.Persona", b =>
                {
                    b.Property<string>("IdPersona")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Fecha_nacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("IdPersona");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Avance_1.Models.Roles", b =>
                {
                    b.Property<string>("IdRol")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nivel_privilegio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Nombre_rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Avance_1.Models.Siniestro", b =>
                {
                    b.Property<string>("IdSiniestro")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Agente_designadoIdAgente")
                        .HasColumnType("character varying(5)");

                    b.Property<string>("CamdesignadaIdCam")
                        .HasColumnType("character varying(5)");

                    b.Property<DateTime>("Fecha_Siniestro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IdAgente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("IdCam")
                        .HasColumnType("character(1)");

                    b.Property<string>("Nivel_Siniestro")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("IdSiniestro");

                    b.HasIndex("Agente_designadoIdAgente");

                    b.HasIndex("CamdesignadaIdCam");

                    b.ToTable("Siniestro");
                });

            modelBuilder.Entity("Avance_1.Models.Zona", b =>
                {
                    b.Property<string>("IdZona")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Descripcion_zona")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("IdZona");

                    b.ToTable("Zona");
                });

            modelBuilder.Entity("Avance_1.Models.Agente", b =>
                {
                    b.HasOne("Avance_1.Models.Persona", "Designio")
                        .WithMany()
                        .HasForeignKey("DesignioIdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Avance_1.Models.Roles", "rol")
                        .WithMany()
                        .HasForeignKey("rolIdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designio");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("Avance_1.Models.CamECU911", b =>
                {
                    b.HasOne("Avance_1.Models.Zona", "Zona_designada")
                        .WithMany()
                        .HasForeignKey("Zona_designadaIdZona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zona_designada");
                });

            modelBuilder.Entity("Avance_1.Models.Siniestro", b =>
                {
                    b.HasOne("Avance_1.Models.Agente", "Agente_designado")
                        .WithMany()
                        .HasForeignKey("Agente_designadoIdAgente");

                    b.HasOne("Avance_1.Models.CamECU911", "Camdesignada")
                        .WithMany()
                        .HasForeignKey("CamdesignadaIdCam");

                    b.Navigation("Agente_designado");

                    b.Navigation("Camdesignada");
                });
#pragma warning restore 612, 618
        }
    }
}
